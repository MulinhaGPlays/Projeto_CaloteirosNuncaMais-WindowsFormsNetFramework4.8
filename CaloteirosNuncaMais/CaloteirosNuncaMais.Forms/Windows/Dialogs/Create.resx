<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAByEQAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgCAAAA0xA/MQAAAAFv
        ck5UAc+id5oAABEsSURBVHja7Z0LdJTVncCBEGMqloKvVmu3Z6utth5XF93a3e6uXavs6dpWpfRh17X1
        2J6lW9327NazbckbEmJECCABVihYJAF5KcKigjw0Bmwh38zkNSFk8iCZZJJMHpNkJvPc+2VaWkJCMjP3
        ++Yb5nfP73CAk0y+3Ht/9/n/7p2W+xETQNIyjSwABABAAAAEAEAAAAQAQAAABABAAAAEAEAAAAQAQAAA
        BABAAAAEAEAAAAQAQAAABABAAAAEAEAAAAQAQAAABABAAAAEAEAAAAQAQAAABABAAAAEAEAAAAQAQAAA
        BABAAAAEAEAAAAQAQAAABABAAAAEAEAAAAQAQAAABABAAAAEAAQgFwABABAAAAEAEAAAAQAQAAABABAA
        AAEAEAAAAQAQAAABABAAAAEAEAAAAQAQAAABABAAAAEAEAAAAQAQwHikm3IEV5py0hSVK9V/iv8kZxDg
        sq3x2VcomTMqM6ZVij9FjV/6MXPhx6uKbq5+4eZq8Zelc8ziazJnKOEvEF+MDwhwOdT7rJlqnRZ/Kf5s
        TekC25Ecu7m0t/n9wa46T1+zd8Duddm9fS3ebquntWKoakfv0Tx72UJb8W214tvFN4pvxwQESDxEG58x
        XW3p199XfyS3Q9R4d58/NOXk6fe3VAyJb1x3rzUnzZQpPkqeBmLQJdSKHbWb0jdXs2U9eZqCAFpW/WmV
        BddYdv+w2XbU5R8JhmJIPnew4e2B7d+25V6lGhV7b5Cdqrx0V93pzT2xs/nBBrWD0q32z1T+9+/qpTz5
        y1+uz56pIIB8xCB+yWzzvkWtXbXukNTUXD5Y9i2baHSzUpUYn/DVbzZKeaT9z55TR3e65e30yl1PNEt5
        8t1PNotPQwCpDX+aWrde+eezrSeHQpql6t19q26vjaXaiYfc+vBZKQ+z7yetOgvw2uNNUp585782IYBM
        xEhAjHlOrO4K+IIhjZPL7tslGrDRpSQEQID4I4bmL91Z13piKKRbCobKX3SIWUEU01AEQACptX9a5Zb5
        ZwfavCHdk7nMufRj5kgdQAAEiGrjNs0kZp/hnaw/raalKjufaNZh2DNRsu7vj9QBVYB/QQAEmNqCZmaK
        uvCck6YUfbJq/RetpY/Z3vj31kO/bn+/qPPUy90n13S9V9hZvtzx4bpuy/Ze21FXzxnPiCugpwOWMmf4
        UadajVKULfMbEAABJpnUqmv511nE8Ob4sk5Rs13t3oD/gpZ+oN279u66xX/sDdRZaZqSP9ey6vO12x5p
        PF7Q0fLBoM+tR+cg5gPip0cgwEMIgAAT1w8xsFl/X/0HKx3d9Z6JcnDY6d/wpfqxmTga33Y+5kf8T8k8
        69Fce1edR9spcTC068nmKdZFBECACVt9UfXF8KDujX6fJ3jpCrfnqZbJyz5dnTaoPcm1ltd/3NJZ7dbO
        gUGHb/UdtVPZl0UABBg/eGHtXXXVu3qDUxjAV27pyUyJICoh/Pn515jf+WW76Dq0mhC/2S86n0lDhhAA
        AcY2/HmzTO/8qt3dO6Wq2dfiXf6p6igW4M9r1njYpZEDO7/flDFZuSIAAlywh1V8W23DOwO6lXpWipJ3
        tbl8uUMLARw17oJrLJdeEUpgAWZUli20IYDUPayHGvqaR6aece2nh5d81BxdDMIFq6vTK/c/0+r3yl8j
        +r+fTxKgltAClC5AAHm1/7XvN40MRLZmv/dHLXKKPF19gL1Pt8QYLH1x6qp15881X2ImgAAIoFa+Xf/W
        7HNHVvt7m0YKb7DE2PyPeYx9/9EalL1vJsS+ROkiQLILIMps+0JbpLU/vN8kubxH+4H3CjvlCiCmNJeY
        oyNAUguQOUPZ8Lf1UaxFBvzBjfefEVNY6SuwuVeZIpqFT5p8w4GX7qrLnuC9GQRIXgFEu1h0U5WjJpoN
        qa46z9I55hwN3k/PmqmsuaN2qMsn0YHDGfaJqiYCJKsAowc0mEud0WVZ5RZnhmZZJqrRwf9qkyhAc/ng
        RAcNIUCSCiCqr/i1jVnYYiC0ZLa5/bS0V2pGhgKr76gddyYgBPjNAwiQZALkpCmFn6hynh2JLr+CwdCm
        r5zR9ASE8LKsxE5gz9Mt43ZZYhqz6f4zCJBcAohyOpLXEXV+ufv8K2+t0fQYHDFiWfJRs900LEsANWAJ
        ARAgfJrS8k9Xuzqin2U6G0YmDTGQYumBn52TJYBdGc67epxpAAIknQCikA5n2mPJr9aTQ7lXaX54rRD1
        xb+sHuqWsxwkeq0V4/VaCJBcAohmWzTePWdieiWl/uCAPkegZc5Qqnb0yukCgqHNDzZkpiBAcgug5tpj
        seaaudSpT36pS1VPSJsKv7Go9eJ5MAIkmwBK5RZnjPn1YUl3hi75JUYsK26pmeKbCZOm94s6L66gCJBE
        Aojxz7LrLE7bSKw16flOnUpafatYaTo+KKWYLWW9wn8ESF4BxMB94z+cCcbcnr6bZdetpMUPEi23lGK2
        HXMxCU5qAWQtLL71XNti3QSYXrnju3KKucPsXjJ7bPxSQguw7VEEiLAyndrUE3t+HfhP/c4Bz0pVSv66
        TsqLMs7GkWXXj92+SGQBlK0PNyJAZCvrTcclvIG+b5F+JS3mAEU3VbvsEnYDBh2+ok9W5aSNFUAMC0My
        XkR786cIYGABRNefP8cs5aKKvU+36CdAuinvarNdkRAT4en3r7ilZsx1QFmj96wE/RIMOPDzcwhgYAGu
        NBXdVBVLBMT5tOsHzRk65peYuTa8LeEVGe94MaEIkCwCiIIv/lyNZ0DCK7eXfstWi6mLpUzCfrDPHVh7
        t3XMq2EIkDQCiNnkvDq/R0JJb/+OvgJMq/zduq7YH1vMpNfda81CgOQUQJT0y39fL+XMhdIFtqkfvyxF
        gPLlErYCAr7ghi/Vj4liQoBkESAzRdn8VTmvPm39euPFW6qaCnB0iT32xxa1XNR1BEhWAWYov5V0FYrI
        d50FiDF+GwEQQM0vWRuH+gvw9v+0IwACxLpzLuss1W2PXEYCpCrrv2gNeBEAAQw8CdZUgHX3WqWEWiCA
        0QWQFVVW9q3EFCAQfPnLCJC0AsR2ENAFG2GP670PIEUAkTZddJyjRAEO/qINARBAEwHeeq7N+AIISxEg
        KQRQ72DUVwAxukAABDCKALt/eFkJUDLP6vMgAAIkpQDZqcpLf1XnGw4gAAIgAAIgAAIknwDbv63rujYC
        XJ4CHMqwJ6gAZQsRIIkFWHNnnXdIggBHcvUW4LdfkxPduO1Rm56xLQgQNwE2PzD2eNDsK5RVn68dGZQg
        wPGCDl0FSFE2Pygnvl2IlJmCAEkgwJaHNBSgotiRoAL85gH59x0iQNIJcGpjj57ZIkuAoD90cYwgAhhL
        gDd/2qqhALfXjrgkCFCzu0/PqaQsAXzu4Nq7J7xGFgEMIcC+n2gmQJp6ALWnX8IB1I1HXOqpW+kJJoCn
        b5zjkhAgWQTIGb0wSsoJ7I5q99LZmtydrKkA/a3ewhs0v/AKAQwrgLTzwgYdvuV/Ua1bU6recDxfwjJo
        26mhvFn6dVwIYDABrjQtu97ibByJ/cOD/nGOXTH+RljVjl79NwEQwDACjN7H2mF2S/l8PQPFRa199ZsS
        BDj0a10jOBDAWAKEF4Jsx1xSPr9ilX5bAaJAt38n5gINqnmi/yYAAhhIANGUWrb3Svn81hND6mfqMp4W
        RbD7B82xzoDPeQs/UaX/DBgBDCSAegvTC3JuYRoZCBTfVnvxRUwaZcv+Z2LdHxy9Ny0O4x8EMJIA0yv3
        LZLz+SLteUqnyxPET3k3K9YD8+ISCI0ABhsChRfUg3IEUPeDU3TqAU6ujenQ7J6znoJrLXEZ/yBAfAR4
        Zf74k2D1NuI+ObcRDzv9K2+t0WEUJH6R2tf7YorfzrbHZf0HAeImwNaHz46z5p1uyptlaj89LGsU9NZz
        mh8QlBN+5lPRP7Orw7f809X6R0AggPEECN+fubFblgCOanf+HLOmQ4ucNOWFm6sGO6PfwD6S2xHH5h8B
        jCWAyBzxS4XkpT1PNWtavcKHWgeiPdS6p8FT+PGqnPg1/whgLAEkBkWHU2eVO3+uhvPLWPIkGAzt+F4c
        joFAAOMKIKYBojmUtR8cTm//sn2xZp2AKE3Tq87oHqzyFacasJRuQgAEuOCnHPzvNokCDPf419xZq0Vs
        nOhYCq6NMoCv0+IWgx99tuoQIJEEEHVi9RdkjoJCo6/I5M1SL7vXIhA6ivsOh7p86/7GmpkS/9qPAIYT
        IDyzrN3bF5Kayl90qKPtdMkZ8mFJxFtg3uHA1q83ZsR76I8AxhUgc0Zl6WONsraEz4db7n929OKMdFkL
        oKbnb6zqP+eN6Cl87sCuJ5rju+6JAEYXIPxugF0ZltsJBLzBNxa1ynIgiiMC3L3+soU247T9CGBQAcI7
        YnueagnJTgFf8MDPzokeJsb5gJj+5s81O2ojeH2np8Gz8R/PGKrtRwDjCqB2ArPNEsMi/jxVFDtEDxPL
        HFRt/p+JICusb/av+ExNvOI9ESDxBAhnVOkCWzCghQIh2zFXyT1W8RtFsUeWfYXywqeq+5qntPo51OU7
        +Iu23NHDTw1Y++MjwGuPI8DZqbwAnpWqVO/sC2mTxIj80OL2gmstkWogGvLTm3umMuUwb3OuvqNO/fx0
        kzFrf25C3xN82QsgWs2Vn60ZaPeGNEuOareYGRdcp2ogfJt0fiy+THTgl+6XfO6AZUfvxvvPiFFWllEb
        fgRIAAHCP3TH95qijjabYuq2eo7mdZTMs4Z/oigjMc5Ru4X0sWW37h7roGPC2E9Hjfv9ok4xuMqaqRhk
        nwsBEluAcI4dX9YR0j6Jlrvlg8HjBR3bHmlcdXtt/lxLdpoihqziFxcsnla5+gu1vbYLhv5Bf3Cgzdv4
        ruvY0o7NX20Q3/KHniQRqj4CJIYAoiUWRB1zFl0acQW66z2NR1zm0t6Ta7vKl3eKLkL8eXpTT8WqLvH3
        /c+cE+W44b7652+sEp6o/UaKEq/XGhEgwQQQTWxEa4LZaerWWNXO3lCcUsAXFEN/MbAJ9wZhxK8g/icR
        Kz0CxFmA0gURH4IgBuVLrjbr3A+EU/8575aHGgy4h4UASSTAaD+grtK8V9gZCupX+1sqhtbcWWe0+AUE
        SEYBwvMBMXl47fEmTddGzy/kf7DCIea1+t/aggAIMMmTFH+uRj1HUbOuoPXE0Jb5DWrUUJrpMq798RFg
        x3fl7ATv/VGLzgLsf1bOHWFlMR+ElpWq7jFt/UZjS/mg3KrfYXG//uMWNVhohnJ5V/34CCAmcyXzrBWr
        uiqKHbFwYlWXegq+jkvOYiSw6Z8afr+h+3frYmN9t5zLsNLV1iRvlkn0J/UH+r2xXbLt8wQbD7t2P9mc
        P8ccXYwQAkQwmfvz1bSo0f+NUvETpTy5xINActLV8CrxYGvvtr7zq/amY4MR3bM07PSLbzmcYS+5xyoq
        vehRk6fqx00A0KSDSlXCLffKW2u2Pdp4ONNu3uZsOj7oqHH3No30t3oFvbYRR7XbdtRl2uo8tLj91W80
        rrilRq33UwsEQgAwPOlqNyWGRuGNKlG5l8w2L7vB8vyNVYJl11vE4F7Ma8MBDmKUr/ai6UmdYwhwmfsg
        xkjhYIo/kG5K8hqPAAAIAIAAAAgACACAAAAIAIAAAAgAgAAACACAAAAIAIAAAAgAgAAACACAAAAIAIAA
        AAgAgAAACACAAAAIAIAAAAgAgAAACACAAAAIAIAAAAgAgAAACACAAAAIAIAAAAgAgAAACACAAAAIAIAA
        AAgAgAAACACAAAAIAIAAAAgAgAAACACAAAAIAAhALgACACAAAAIAIAAAAgAgAAACACAAAAIAIAAAAgAg
        AAACACAAAAIAIAAAAgAgAAACACAAAAIAGI//BzMWsUva8H2eAAAAAElFTkSuQmCC
</value>
  </data>
</root>